# name: Create and publish a multi-platform Docker image to DockerHub

# on:
#   push:
#     branches: ['release']

# env:
#   IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
#   PROJECT_PATH: ${{ secrets.PROJECT_PATH }}

# jobs:
#   build-and-push-image:
#     runs-on: ubuntu-latest
#     environment: DOCKER_PUSH
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Get version number based on commits
#         id: vars
#         run: |
#           LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}/tags" | jq -r '.results[0].name' | sed 's/v//')
#           NEW_VERSION=$((LATEST_TAG + 1))
#           echo "VERSION=v$(printf "%03d" $NEW_VERSION)" >> $GITHUB_ENV

#       - name: Build and push multi-platform Docker image
#         run: |
#           docker buildx build \
#             --platform linux/amd64,linux/arm64 \
#             -f docker/Dockerfile \
#             -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
#             --push .

#       - name: Output version
#         run: |
#           echo "Deployed version: ${{ env.VERSION }}"

#       - name: Checkout ArgoCD repository
#         uses: actions/checkout@v4
#         with:
#           repository: nleea/${{ env.PROJECT_PATH }}
#           token: ${{ secrets.PAT_TOKEN }}
#           path: ${{ env.PROJECT_PATH }}

#       - name: Update Deployment image
#         run: |
#           cd ${{ env.PROJECT_PATH }}/base/apps
#           sed -i "s|${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:.*|${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}|" deployment.yml

#           git config --global user.email "ci@github.com"
#           git config --global user.name "GitHub Actions"

#           git add deployment.yml
#           git diff-index --quiet HEAD || git commit -m "Update base_django image to ${{ env.VERSION }}"
#           git push
